service: mma-vision-api

frameworkVersion: '4.4.18'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan # NÃ©cessaire pour `scanItems`
      Resource: arn:aws:dynamodb:eu-west-1:652413770710:table/mma-vision-fights
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: arn:aws:s3:::mma-vision-bucket/*
  environment:
    FIGHTS_TABLE: mma-vision-fights
    COMMENTS_TABLE: mma-vision-comments

resources:
  Resources:
    FightsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.FIGHTS_TABLE}
        AttributeDefinitions:
          - AttributeName: fightId
            AttributeType: S
        KeySchema:
          - AttributeName: fightId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    CommentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.COMMENTS_TABLE}
        AttributeDefinitions:
          - AttributeName: fightId
            AttributeType: S
          - AttributeName: commentId
            AttributeType: S
        KeySchema:
          - AttributeName: fightId
            KeyType: HASH
          - AttributeName: commentId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

functions:
  createFight:
    handler: controllers/fightController.createFight
    events:
      - http:
          path: fights
          method: post

  getFights:
    handler: controllers/fightController.getFights
    events:
      - http:
          path: fights
          method: get
          cors: true

  getFight:
    handler: controllers/fightController.getFight
    events:
      - http:
          path: fights/{fightId}
          method: get

  createComment:
    handler: controllers/commentController.createComment
    events:
      - http:
          path: comments
          method: post

  getCommentsForFight:
    handler: controllers/commentController.getCommentsForFight
    events:
      - http:
          path: fights/{fightId}/comments
          method: get
